group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_line()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_histogram()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_histogram()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_histogram()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_density_line()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_area()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_smooth()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point()+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point()+theme_fivethirtyeight()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point()+theme_wsj()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point()+theme_economist_white()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point()+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = cyl, size = qsec, shape = gear)+ theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1, size = qsec, shape = gear)+ theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1)+ theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap(origin)+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap(Data10$origin)+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap()+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap("FJK", "LGA","EWR")+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap("JFK", "LGA","EWR")+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap()+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+ facet_wrap(origin)+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
group_by(origin)%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = Correl1))+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+main("Distribution of the Daily Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+geom_smooth(formula = y ~ x,method =lm, se = FALSE)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_smooth(formula = y ~ x,method =lm, se = FALSE)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_smooth(formula = Correl1 ~ EachDay,method =lm, se = FALSE)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+boxplot(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1,color = origin))+boxplot()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1,color = origin))+boxplot(x=EachDay)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1,color = origin))+boxplot(x=EachDay)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1,color = origin))+geom_boxplot()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_line(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_density_line(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_area(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_histogram(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_lm(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_bar(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_line(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
combine(Data5, Data7, Data9)->Data10
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+scale_y_log10()+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
MeanLGA
MeanJFK
MeanEWR
mean(Data9$Correl1)->MeanLGA
MeanLGA
median(Data9$Correl1)->MedianLGA
MedianLGA
dim(Data9$EachDay)->DaysLGA
DaysLGA
mean(Data7$Correl1)->MeanJFK
MeanJFK
median(Data7$Correl1)->MedianJFK
MedianJFK
nrow(Data7$Correl1)->DaysJFK
DaysJFK
MeanLGA
MeanJFK
MeanEWR
MeanLGA
MeanJFK
MeanEWR
MeanJFK
MeanLGA
MeanEWR
MeanJFK
MeanLGA
MeanEWR
combine(Data5, Data7, Data9)->Data10
Data10%>%
arrange(origin,c(JFK,LGA,EWR))-> Data11
MeanJFK
MeanLGA
MeanEWR
combine(Data5, Data7, Data9)->Data10
Data10%>%
arrange(origin,c("JFK","LGA","EWR"))-> Data11
MeanJFK
MeanLGA
MeanEWR
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+scale_y_log10()+facet_wrap(origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+scale_y_log10()+facet_wrap(~origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+facet_wrap(~origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Delays Correlation for Each Airport in NYC")
Data10%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+facet_wrap(~origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Correlation Between
Subsequent Flight Delays for Each Airport in NYC")
Data10 %>%
group_by(origin="JFK")%>%
group_by(origin="LGA")%>%
group_by(origin="EWR")
Data10
Data10 %>%
group_by(origin="JFK")%>%
group_by(origin="LGA")%>%
group_by(origin="EWR")
Data10 %>%
group_by(origin="JFK")
Data10 %>%
order(origine)
Data10
Data10 %>%
order(origin)
Data11<- Data10[order(origin),]
Data10
Data11<- Data10[order(origin),]
Data11<- Data10[order(Data10$origin),]
Data11<- Data10[order(Data10$origin),]
Data11
Data11<- Data10[order(-Data10$origin),]
Data10
MeanJFK
MeanLGA
MeanEWR
Data10
Data10%>%
group_by(origin)%>%
mutate(MeanAirport=(mean(Correl1)))-> Data11
Data11
MeanJFK
MeanLGA
MeanEWR
Data10%>%
group_by(origin)%>%
mutate(MeanAirport=(mean(Correl1)))-> Data11
Data11
Data10%>%
group_by(origin)%>%
mutate(MeanAirport=(mean(Correl1)))%>%
arrange(MeanAirport)-> Data11
Data11
Data10%>%
group_by(origin)%>%
mutate(MeanAirport=(mean(Correl1)))%>%
arrange(-MeanAirport)-> Data11
Data11
Data11%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+facet_wrap(~origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Correlation Between
Subsequent Flight Delays for Each Airport in NYC")
Data10%>%
group_by(origin)%>%
mutate(MeanAirport=(mean(Correl1)))%>%
arrange(-MeanAirport)
Data10
Data15= combine(Data5, Data7, Data9)
Data15
Data10 = combine(Data5, Data7, Data9)
Data10
Data10%>%
group_by(origin)%>%
mutate(MeanAirport=(mean(Correl1)))%>%
arrange(-MeanAirport)-> Data11
Data11
Data11%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+facet_wrap(~origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Correlation Between
Subsequent Flight Delays for Each Airport in NYC")
library(ggthemes)
library(ggthemes)
Data11%>%
ggplot(mapping=aes(x=EachDay, y=Correl1))+geom_point(aes(color = origin))+facet_wrap(~origin)+theme_economist()+xlab("Days of the Year")+ylab("Daily Correlation")+ggtitle("Distribution of the Daily Correlation Between
Subsequent Flight Delays for Each Airport in NYC")
library(tidyverse)
library(tidyr)
library(dplyr)
library(kableExtra)
library(readr)
library(ggplot2)
library(graphics)
install.packages('tinytex')
tinytex::install_tinytex()
library(tidyverse)
library(tidyr)
library(dplyr)
library(kableExtra)
library(readr)
library(ggplot2)
library(graphics)
install.packages('tinytex')
tinytex::install_tinytex()
library(tidyverse)
library(tidyverse)
library(tidyr)
library(dplyr)
library(kableExtra)
library(readr)
library(ggplot2)
library(graphics)
library(tinytex)
library(tidyverse)
library(tidyr)
library(dplyr)
library(kableExtra)
library(readr)
library(ggplot2)
library(graphics)
library(tinytex)
curve(dt(x,44))
plot(qnorm)
curve(dnorm(x), -4, 4, ylab="density.", col = "red")
curve(dt(x, df = 44), add = TRUE)
#dt gives the density, pt gives the distribution function, qt gives the quantile function, and rt generates random deviates
qt(.75,44) #the 75th percentile of this distribution, when rounded to 3 decimal places, is 0.680 that is the value that has an area to the left of 0.75 under a T distribution with 44 degrees of freedom.
qt(0.96,44)
pt(1.792069, 44)
pt(-1.792069, 44)
pt(-1.5, 44)
1-pt(2, 44)
nationals <- read_csv("nationalsdata2014-1.csv", col_types = cols(Salary = col_integer()))
df<-head(nationals)
kable(df) %>%
kable_styling(bootstrap_options = "striped", font_size = 15, full_width = F)
names(nationals)
salary <- select(nationals, Salary)
kable(salary)%>%
kable_styling(bootstrap_options = "striped", font_size = 15, full_width = F)
summary(salary)
var(salary)
sapply(salary, sd)
hist(nationals$Salary)
hist(nationals$Salary,xlab = "Salary(USD)", main="Histogram of 2014
Salaries")
boxplot(nationals$Salary)
boxplot(nationals$Salary,horizontal=TRUE, xlab="Salary(USD)", main= "Boxplot of 2014 Salaries")
library(fastGraph)
shadeDist(c(qt(.005,83),qt(0.995,83)),"dt",83,lower.tail=FALSE,main="C=0.99")
qt(0.005,83)
library(fastGraph)
shadeDist(c(qt(.005,83),qt(0.995,83)),"dt",83,lower.tail=FALSE,main="C=0.99")
shadeDist(c(qt(.005,83),qt(0.995,83)),"dt",83,lower.tail=FALSE,main="C=0.99")
library(fastGraph)
shadeDist(c(qt(.005,83),qt(0.995,83)),"dt",83,lower.tail=FALSE,main="C=0.99")
qt(0.005,83)
boxplot(nationals$Salary)
boxplot(nationals$Salary,horizontal=TRUE, xlab="Salary(USD)", main= "Boxplot of 2014 Salaries")
hist(nationals$Salary)
hist(nationals$Salary,xlab = "Salary(USD)", main="Histogram of 2014
Salaries")
summary(salary)
var(salary)
sapply(salary, sd)
df<-head(nationals)
kable(df) %>%
kable_styling(bootstrap_options = "striped", font_size = 15, full_width = F)
names(nationals)
salary <- select(nationals, Salary)
kable(salary)%>%
kable_styling(bootstrap_options = "striped", font_size = 15, full_width = F)
curve(dt(x,44))
plot(qnorm)
curve(dnorm(x), -4, 4, ylab="density.", col = "red")
curve(dt(x, df = 44), add = TRUE)
library(tidyverse)
library(tidyr)
library(dplyr)
library(kableExtra)
library(readr)
library(ggplot2)
library(graphics)
library(tinytex)
curve(dt(x,44))
plot(qnorm)
curve(dnorm(x), -4, 4, ylab="density.", col = "red")
curve(dt(x, df = 44), add = TRUE)
#dt gives the density, pt gives the distribution function, qt gives the quantile function, and rt generates random deviates
qt(.75,44) #the 75th percentile of this distribution, when rounded to 3 decimal places, is 0.680 that is the value that has an area to the left of 0.75 under a T distribution with 44 degrees of freedom.
qt(0.96,44)
pt(1.792069, 44)
pt(-1.792069, 44)
pt(-1.5, 44)
1-pt(2, 44)
nationals <- read_csv("nationalsdata2014-1.csv", col_types = cols(Salary = col_integer()))
df<-head(nationals)
kable(df) %>%
kable_styling(bootstrap_options = "striped", font_size = 15, full_width = F)
names(nationals)
salary <- select(nationals, Salary)
kable(salary)%>%
kable_styling(bootstrap_options = "striped", font_size = 15, full_width = F)
summary(salary)
var(salary)
sapply(salary, sd)
hist(nationals$Salary)
hist(nationals$Salary,xlab = "Salary(USD)", main="Histogram of 2014
Salaries")
boxplot(nationals$Salary)
boxplot(nationals$Salary,horizontal=TRUE, xlab="Salary(USD)", main= "Boxplot of 2014 Salaries")
library(fastGraph)
shadeDist(c(qt(.005,83),qt(0.995,83)),"dt",83,lower.tail=FALSE,main="C=0.99")
qt(0.005,83)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::reinstall_tinytex()
extrafont::font_install("DejaVu Sans")
library(tidyverse)
install.packages(c("animation", "av", "backports", "bayestestR", "bitops", "blob", "brio", "broom", "callr", "car", "caret", "cluster", "codetools", "conquer", "corrplot", "cpp11", "credentials", "curl", "dbplyr", "DEoptimR", "desc", "DescTools", "devtools", "diffobj", "DT", "e1071", "effectsize", "emmeans", "Exact", "fields", "forcats", "foreign", "gert", "GGally", "ggeffects", "ggforce", "ggfortify", "ggsignif", "gh", "gifski", "glmnet", "goftest", "gtools", "haven", "highr", "Hmisc", "hms", "htmlTable", "igraph", "insight", "ipred", "jpeg", "KernSmooth", "knitr", "labelled", "lattice", "lava", "lme4", "lubridate", "magick", "manipulateWidget", "maps", "maptools", "MASS", "matlib", "Matrix", "MatrixModels", "matrixStats", "maxLik", "memoise", "mgcv", "mvtnorm", "nlme", "nloptr", "nnet", "nycflights13", "openssl", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pkgload", "plotrix", "processx", "ps", "psych", "quantreg", "ragg", "raster", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "reprex", "reticulate", "rgdal", "rgl", "rio", "rmarkdown", "robustbase", "rootSolve", "roxygen2", "Rttf2pt1", "rversions", "rvest", "sandwich", "sessioninfo", "sf", "SignifReg", "sjPlot", "sp", "spam", "SparseM", "spatial", "statmod", "stringi", "survival", "systemfonts", "testthat", "textshaping", "TH.data", "tidycensus", "tidyr", "tidyverse", "tigris", "tinytex", "TraMineR", "transformr", "tweenr", "units", "usethis", "uuid", "V8", "waldo", "xfun", "xgboost", "zip", "zoo"))
install.packages(c("animation", "av", "backports", "bayestestR", "bitops", "blob", "brio", "broom", "callr", "car", "caret", "cluster", "codetools", "conquer", "corrplot", "cpp11", "credentials", "curl", "dbplyr", "DEoptimR", "desc", "DescTools", "devtools", "diffobj", "DT", "e1071", "effectsize", "emmeans", "Exact", "fields", "forcats", "foreign", "gert", "GGally", "ggeffects", "ggforce", "ggfortify", "ggsignif", "gh", "gifski", "glmnet", "goftest", "gtools", "haven", "highr", "Hmisc", "hms", "htmlTable", "igraph", "insight", "ipred", "jpeg", "KernSmooth", "knitr", "labelled", "lattice", "lava", "lme4", "lubridate", "magick", "manipulateWidget", "maps", "maptools", "MASS", "matlib", "Matrix", "MatrixModels", "matrixStats", "maxLik", "memoise", "mgcv", "mvtnorm", "nlme", "nloptr", "nnet", "nycflights13", "openssl", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pkgload", "plotrix", "processx", "ps", "psych", "quantreg", "ragg", "raster", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "reprex", "reticulate", "rgdal", "rgl", "rio", "rmarkdown", "robustbase", "rootSolve", "roxygen2", "Rttf2pt1", "rversions", "rvest", "sandwich", "sessioninfo", "sf", "SignifReg", "sjPlot", "sp", "spam", "SparseM", "spatial", "statmod", "stringi", "survival", "systemfonts", "testthat", "textshaping", "TH.data", "tidycensus", "tidyr", "tidyverse", "tigris", "tinytex", "TraMineR", "transformr", "tweenr", "units", "usethis", "uuid", "V8", "waldo", "xfun", "xgboost", "zip", "zoo"))
install.packages(c("animation", "av", "backports", "bayestestR", "bitops", "blob", "brio", "broom", "callr", "car", "caret", "cluster", "codetools", "conquer", "corrplot", "cpp11", "credentials", "curl", "dbplyr", "DEoptimR", "desc", "DescTools", "devtools", "diffobj", "DT", "e1071", "effectsize", "emmeans", "Exact", "fields", "forcats", "foreign", "gert", "GGally", "ggeffects", "ggforce", "ggfortify", "ggsignif", "gh", "gifski", "glmnet", "goftest", "gtools", "haven", "highr", "Hmisc", "hms", "htmlTable", "igraph", "insight", "ipred", "jpeg", "KernSmooth", "knitr", "labelled", "lattice", "lava", "lme4", "lubridate", "magick", "manipulateWidget", "maps", "maptools", "MASS", "matlib", "Matrix", "MatrixModels", "matrixStats", "maxLik", "memoise", "mgcv", "mvtnorm", "nlme", "nloptr", "nnet", "nycflights13", "openssl", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pkgload", "plotrix", "processx", "ps", "psych", "quantreg", "ragg", "raster", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "reprex", "reticulate", "rgdal", "rgl", "rio", "rmarkdown", "robustbase", "rootSolve", "roxygen2", "Rttf2pt1", "rversions", "rvest", "sandwich", "sessioninfo", "sf", "SignifReg", "sjPlot", "sp", "spam", "SparseM", "spatial", "statmod", "stringi", "survival", "systemfonts", "testthat", "textshaping", "TH.data", "tidycensus", "tidyr", "tidyverse", "tigris", "tinytex", "TraMineR", "transformr", "tweenr", "units", "usethis", "uuid", "V8", "waldo", "xfun", "xgboost", "zip", "zoo"))
install.packages(c("animation", "av", "backports", "bayestestR", "bitops", "blob", "brio", "broom", "callr", "car", "caret", "cluster", "codetools", "conquer", "corrplot", "cpp11", "credentials", "curl", "dbplyr", "DEoptimR", "desc", "DescTools", "devtools", "diffobj", "DT", "e1071", "effectsize", "emmeans", "Exact", "fields", "forcats", "foreign", "gert", "GGally", "ggeffects", "ggforce", "ggfortify", "ggsignif", "gh", "gifski", "glmnet", "goftest", "gtools", "haven", "highr", "Hmisc", "hms", "htmlTable", "igraph", "insight", "ipred", "jpeg", "KernSmooth", "knitr", "labelled", "lattice", "lava", "lme4", "lubridate", "magick", "manipulateWidget", "maps", "maptools", "MASS", "matlib", "Matrix", "MatrixModels", "matrixStats", "maxLik", "memoise", "mgcv", "mvtnorm", "nlme", "nloptr", "nnet", "nycflights13", "openssl", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pkgload", "plotrix", "processx", "ps", "psych", "quantreg", "ragg", "raster", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "reprex", "reticulate", "rgdal", "rgl", "rio", "rmarkdown", "robustbase", "rootSolve", "roxygen2", "Rttf2pt1", "rversions", "rvest", "sandwich", "sessioninfo", "sf", "SignifReg", "sjPlot", "sp", "spam", "SparseM", "spatial", "statmod", "stringi", "survival", "systemfonts", "testthat", "textshaping", "TH.data", "tidycensus", "tidyr", "tidyverse", "tigris", "tinytex", "TraMineR", "transformr", "tweenr", "units", "usethis", "uuid", "V8", "waldo", "xfun", "xgboost", "zip", "zoo"))
install.packages(c("animation", "av", "backports", "bayestestR", "bitops", "blob", "brio", "broom", "callr", "car", "caret", "cluster", "codetools", "conquer", "corrplot", "cpp11", "credentials", "curl", "dbplyr", "DEoptimR", "desc", "DescTools", "devtools", "diffobj", "DT", "e1071", "effectsize", "emmeans", "Exact", "fields", "forcats", "foreign", "gert", "GGally", "ggeffects", "ggforce", "ggfortify", "ggsignif", "gh", "gifski", "glmnet", "goftest", "gtools", "haven", "highr", "Hmisc", "hms", "htmlTable", "igraph", "insight", "ipred", "jpeg", "KernSmooth", "knitr", "labelled", "lattice", "lava", "lme4", "lubridate", "magick", "manipulateWidget", "maps", "maptools", "MASS", "matlib", "Matrix", "MatrixModels", "matrixStats", "maxLik", "memoise", "mgcv", "mvtnorm", "nlme", "nloptr", "nnet", "nycflights13", "openssl", "openxlsx", "parameters", "patchwork", "pbkrtest", "performance", "pkgload", "plotrix", "processx", "ps", "psych", "quantreg", "ragg", "raster", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "reprex", "reticulate", "rgdal", "rgl", "rio", "rmarkdown", "robustbase", "rootSolve", "roxygen2", "Rttf2pt1", "rversions", "rvest", "sandwich", "sessioninfo", "sf", "SignifReg", "sjPlot", "sp", "spam", "SparseM", "spatial", "statmod", "stringi", "survival", "systemfonts", "testthat", "textshaping", "TH.data", "tidycensus", "tidyr", "tidyverse", "tigris", "tinytex", "TraMineR", "transformr", "tweenr", "units", "usethis", "uuid", "V8", "waldo", "xfun", "xgboost", "zip", "zoo"))
gc()
setwd("~/Desktop/Fall 2022/Project/TOP/TOPYouthResilience")
shiny::runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
df2 <- data.frame(
x = c(0, 1, 2, 3, 4, 5, 6),
y = c(1752, 549, 189, 5, 383, 88),
name = as.factor(c("Has ADHD & Taking ADHD Med", "Has ADHD & Not Taking ADHD Med",
"Has ADHD & Never Taken ADHD Med", "Has ADHD & Med Unknown",
"Does Not Currently Have ADHD", "Current ADHD Status Unknown"))
)
df2 <- data.frame(
x = c(1, 2, 3, 4, 5, 6),
y = c(1752, 549, 189, 5, 383, 88),
name = as.factor(c("Has ADHD & Taking ADHD Med", "Has ADHD & Not Taking ADHD Med",
"Has ADHD & Never Taken ADHD Med", "Has ADHD & Med Unknown",
"Does Not Currently Have ADHD", "Current ADHD Status Unknown"))
)
df2
df2 <- data.frame(
x1 = c(1, 2, 3, 4, 5, 6),
y1 = c(1752, 549, 189, 5, 383, 88),
name = as.factor(c("Has ADHD & Taking ADHD Med", "Has ADHD & Not Taking ADHD Med",
"Has ADHD & Never Taken ADHD Med", "Has ADHD & Med Unknown",
"Does Not Currently Have ADHD", "Current ADHD Status Unknown"))
)
df2
hc2 <- df2 %>%
hchart(
"pie", hcaes(x = name, y = y1),
name = "Responded") %>%
hc_title(
text = " ADHD Condition and Medication Status",
margin = 20,
align = "left",
style = list(color = "black", useHTML = TRUE))
hc2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df3 <- data.frame(
x2 = c(1, 2, 3, 4, 5, 6),
y2 = c(633, 640, 853, 514, 247, 66),
name = as.factor(c("Problematic", "Somewhat Problematic",
"Average", "Above Average",
"Excellent", "Don't Know or Refused"))
)
hc3 <- df3 %>%
hchart(
"pie", hcaes(x = name, y = y2),
name = "Responded") %>%
hc_title(
text = " ADHD and School Performance",
margin = 20,
align = "left",
style = list(color = "black", useHTML = TRUE))
hc3
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
